/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TestUtils } from "./TestUtils";

export class TestUtilsFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(): Promise<TestUtils> {
    return super.deploy() as Promise<TestUtils>;
  }
  getDeployTransaction(): UnsignedTransaction {
    return super.getDeployTransaction();
  }
  attach(address: string): TestUtils {
    return super.attach(address) as TestUtils;
  }
  connect(signer: Signer): TestUtilsFactory {
    return super.connect(signer) as TestUtilsFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestUtils {
    return new Contract(address, _abi, signerOrProvider) as TestUtils;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [
      {
        internalType: "uint256",
        name: "_bitmap",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "_flip",
        type: "uint256"
      }
    ],
    name: "testBitmap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool"
      }
    ],
    payable: false,
    stateMutability: "pure",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610234806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80632799fc2814610030575b600080fd5b61004a600480360361004591908101906100c7565b610060565b6040516100579190610178565b60405180910390f35b6000808214156100a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009c90610193565b60405180910390fd5b8182841614905092915050565b6000813590506100c1816101da565b92915050565b600080604083850312156100da57600080fd5b60006100e8858286016100b2565b92505060206100f9858286016100b2565b9150509250929050565b61010c816101c4565b82525050565b600061011f602e836101b3565b91507f5369676e6572206d75737420626520747279696e6720746f20666c697020617460008301527f206c65617374206f6e65206269740000000000000000000000000000000000006020830152604082019050919050565b600060208201905061018d6000830184610103565b92915050565b600060208201905081810360008301526101ac81610112565b9050919050565b600082825260208201905092915050565b60008115159050919050565b6000819050919050565b6101e3816101d0565b81146101ee57600080fd5b5056fea365627a7a7231582061cac46d55f37557692c3997a08eb0f41158dc3dda98e49e765839092c0d90b86c6578706572696d656e74616cf564736f6c634300050b0040";
